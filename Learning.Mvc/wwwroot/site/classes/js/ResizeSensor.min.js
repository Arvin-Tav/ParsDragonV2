!function () { var r = function (i, e) { function c() { var e, t; this.q = [], this.add = function (e) { this.q.push(e) }, this.call = function () { for (e = 0, t = this.q.length; e < t; e++)this.q[e].call() } } function t(e, t) { if (e.resizedAttached) { if (e.resizedAttached) return e.resizedAttached.add(t), 0 } else e.resizedAttached = new c, e.resizedAttached.add(t); e.resizeSensor = document.createElement("div"), e.resizeSensor.className = "resize-sensor"; var i = "position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;", t = "position: absolute; left: 0; top: 0; transition: 0s;"; e.resizeSensor.style.cssText = i, e.resizeSensor.innerHTML = '<div class="resize-sensor-expand" style="' + i + '"><div style="' + t + '"></div></div><div class="resize-sensor-shrink" style="' + i + '"><div style="' + t + ' width: 200%; height: 200%"></div></div>', e.appendChild(e.resizeSensor), { fixed: 1, absolute: 1 }[i = "position", (t = e).currentStyle ? t.currentStyle[i] : window.getComputedStyle ? window.getComputedStyle(t, null).getPropertyValue(i) : t.style[i]] || (e.style.position = "relative"); var s, o, n = e.resizeSensor.childNodes[0], d = n.childNodes[0], r = e.resizeSensor.childNodes[1], l = (r.childNodes[0], function () { d.style.width = n.offsetWidth + 10 + "px", d.style.height = n.offsetHeight + 10 + "px", n.scrollLeft = n.scrollWidth, n.scrollTop = n.scrollHeight, r.scrollLeft = r.scrollWidth, r.scrollTop = r.scrollHeight, s = e.offsetWidth, o = e.offsetHeight }); l(); t = function (e, t, i) { e.attachEvent ? e.attachEvent("on" + t, i) : e.addEventListener(t, i) }, i = function () { e.offsetWidth == s && e.offsetHeight == o || e.resizedAttached && e.resizedAttached.call(), l() }; t(n, "scroll", i), t(r, "scroll", i) } var s = Object.prototype.toString.call(i), o = "[object Array]" === s || "[object NodeList]" === s || "[object HTMLCollection]" === s || "undefined" != typeof jQuery && i instanceof jQuery || "undefined" != typeof Elements && i instanceof Elements; if (o) for (var n = 0, d = i.length; n < d; n++)t(i[n], e); else t(i, e); this.detach = function () { if (o) for (var e = 0, t = i.length; e < t; e++)r.detach(i[e]); else r.detach(i) } }; r.detach = function (e) { e.resizeSensor && (e.removeChild(e.resizeSensor), delete e.resizeSensor, delete e.resizedAttached) }, "undefined" != typeof module && void 0 !== module.exports ? module.exports = r : window.ResizeSensor = r }();